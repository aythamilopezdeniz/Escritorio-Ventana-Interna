
import java.awt.Point;
import javax.swing.JFileChooser;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

public class VentanaPrincipal extends javax.swing.JFrame {

    private VentanaInterna mainVi;
    private int iFrameNum;
    
    public VentanaPrincipal() {
        initComponents();        
        super.setLocationRelativeTo(null);
        this.mainVi = null;
        this.iFrameNum = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktop = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openItem = new javax.swing.JMenuItem();
        Separator1 = new javax.swing.JPopupMenu.Separator();
        exitItem = new javax.swing.JMenuItem();
        processMenu = new javax.swing.JMenu();
        umbralizarItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        aboutItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Umbralizado de Imágenes");

        javax.swing.GroupLayout desktopLayout = new javax.swing.GroupLayout(desktop);
        desktop.setLayout(desktopLayout);
        desktopLayout.setHorizontalGroup(
            desktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 857, Short.MAX_VALUE)
        );
        desktopLayout.setVerticalGroup(
            desktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 592, Short.MAX_VALUE)
        );

        fileMenu.setText("Archivo");

        openItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openItem.setText("Abrir imagen");
        openItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openItemActionPerformed(evt);
            }
        });
        fileMenu.add(openItem);
        fileMenu.add(Separator1);

        exitItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        exitItem.setText("Salir ");
        exitItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitItem);

        jMenuBar1.add(fileMenu);

        processMenu.setText("Procesar");

        umbralizarItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_MASK));
        umbralizarItem.setText("Umbralizar imagen");
        umbralizarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                umbralizarItemActionPerformed(evt);
            }
        });
        processMenu.add(umbralizarItem);

        jMenuBar1.add(processMenu);

        helpMenu.setText("Ayuda");

        aboutItem.setText("Acerca de");
        aboutItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutItemActionPerformed(evt);
            }
        });
        helpMenu.add(aboutItem);

        jMenuBar1.add(helpMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktop)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktop)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openItemActionPerformed
        JFileChooser fc = new JFileChooser("./SampleImages");        
        addFilters(fc);
        int res = fc.showOpenDialog(null); 
        if (res == JFileChooser.APPROVE_OPTION) {
            if (fc.getSelectedFile().exists()) {
                closeAll();
                mainVi = new VentanaInterna();
                mainVi.setImage(fc.getSelectedFile());
                setProperties(mainVi, fc.getSelectedFile().getName(), false);
                repaint();
            }
            else showNoValidFile();                
        }
    }//GEN-LAST:event_openItemActionPerformed

    private void exitItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitItemActionPerformed
        int res = JOptionPane.showConfirmDialog(rootPane,
            "¿Desea salir de la aplicación?", 
            "¿Salir de la aplicación?", 
            JOptionPane.YES_NO_OPTION);
        if (res == JOptionPane.YES_OPTION) System.exit(0);
    }//GEN-LAST:event_exitItemActionPerformed

    private void umbralizarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_umbralizarItemActionPerformed
        if (mainVi != null) {         
            String datos = (String) JOptionPane.showInputDialog(rootPane,
                "Introduzca el valor de umbral [-1,255]",
                "Selección del umbral",
                JOptionPane.PLAIN_MESSAGE,
                null,
                null,
                "127");
            try {              
                int valor = Integer.parseInt(datos);
                if (valor > 255 || valor < -1) showNoValidInputMessage();
                else {                    
                    VentanaInterna viUmbralizado = new VentanaInterna();
                    viUmbralizado.umbralizar(valor, mainVi.getImageFile());
                    setProperties(viUmbralizado, "Umbral Value: " + valor, true);                        
                    repaint();    
                }                
            } catch (NumberFormatException e) {
                if (datos != null) showNoValidInputMessage();
            }
        }        
        else {
            this.showNoImageFileMessage();
        }
    }//GEN-LAST:event_umbralizarItemActionPerformed
    
    private void aboutItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutItemActionPerformed
        JOptionPane.showMessageDialog(rootPane,
                "Práctica realizada por:\n"
                    + "\n - Aythami López Déniz" 
                    + "\n - David Suárez Suárez\n\n"
                    + "Esta aplicación pone a disposición del usuario una "
                    + "interfaz\nbasada en menús. Todas las funcionalidades "
                    + "quedan ocultas\nhasta que el usuario las activa.\n\n"
                    + "Básicamente nos permite abrir una imagen y aplicarle "
                    + "un\nproceso de umbralizado (multiventana).", 
                "Acerca de", 
                JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_aboutItemActionPerformed
    
    private void setProperties(VentanaInterna vi, String title, Boolean visible) {     
        vi.setTitle(title);
        vi.setLocation(new Point(iFrameNum * 20, iFrameNum * 20));        
        iFrameNum++;
        
        vi.setResizable(true);
        vi.setIconifiable(false);
        vi.setMaximizable(false);
        vi.setClosable(visible);
        
        desktop.add(vi);
        vi.show();
    }
    
    private void closeAll() {
        iFrameNum = 0;
        JInternalFrame[] iFrames = desktop.getAllFrames();
        for (JInternalFrame iFrame : iFrames) {
            iFrame.dispose();
        }
    }
    
    private void addFilters(JFileChooser fc) {
        //fc.setAcceptAllFileFilterUsed(false);
        fc.setFileFilter(new FileNameExtensionFilter(
                "Imágenes", 
                "jpg","jpeg","png","gif","bmp","tif","tiff"));
        fc.addChoosableFileFilter(new FileNameExtensionFilter(
                "Mapa de bits monocromáticos",
                "bmp"));
        fc.addChoosableFileFilter(new FileNameExtensionFilter("PNG", "png"));
        fc.addChoosableFileFilter(new FileNameExtensionFilter("JPEG", "jpg", "jpeg"));
        fc.addChoosableFileFilter(new FileNameExtensionFilter("GIF", "gif"));
        fc.addChoosableFileFilter(new FileNameExtensionFilter("TIFF", "tif", "tiff"));
    }
    
    private void showNoValidFile() {
        JOptionPane.showMessageDialog(rootPane,
                "No existe la imagen seleccionada. Por favor, revíselo\n"
                        + "e inténtelo de nuevo.\n\n",
                "La imagen no existe", 
                JOptionPane.ERROR_MESSAGE);
    }
    
    private void showNoImageFileMessage() {
        JOptionPane.showMessageDialog(rootPane,
                "No puede aplicar operaciones de procesado ni de guardado "
                        + "si no ha abierto una imagen previamente.\n\n"
                        + ""
                        + "Por favor, revise que tiene una imagen abierta", 
                "Abra una imagen", 
                JOptionPane.ERROR_MESSAGE);
    }
    
    private void showNoValidInputMessage() {
        JOptionPane.showMessageDialog(rootPane,
                "No ha introducido un valor válido. Por favor, revíselo\n"
                        + "e inténtelo de nuevo.\n\n"
                        + "Debe ser un número comprendido entre -1 y 255", 
                "Introduzca un valor válido", 
                JOptionPane.ERROR_MESSAGE);
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPopupMenu.Separator Separator1;
    private javax.swing.JMenuItem aboutItem;
    private javax.swing.JDesktopPane desktop;
    private javax.swing.JMenuItem exitItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem openItem;
    private javax.swing.JMenu processMenu;
    private javax.swing.JMenuItem umbralizarItem;
    // End of variables declaration//GEN-END:variables
}
